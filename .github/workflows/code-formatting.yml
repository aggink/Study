name: .NET Code Formatting

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  formatting:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Checkout репозитория с полной историей
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Загружает всю историю репозитория

      # Шаг 2: Проверка установленных версий .NET
      - name: Check available .NET versions
        run: apt list --installed | grep dotnet

      # Шаг 3: Установка последней доступной версии .NET (8.0.x)
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Устанавливает последнюю доступную 8.0 версию

      # Шаг 4: Установка .NET 8.0 SDK вручную (если не установлено)
      - name: Install .NET 8.0 SDK manually (если не установлено)
        run: |
          # Загрузка и установка .NET 8.0 SDK вручную, если он не был установлен
          wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh --channel 8.0

      # Шаг 5: Получаем список изменённых файлов
      - name: Get changed files
        id: changed-files
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt
          # Отфильтровываем только .csproj, .sln, .cs и .resx файлы
          changed_files=$(grep -E '\.cs$|\.csproj$|\.sln$|\.resx$' changed_files.txt)
          echo "changed_files=${changed_files}" >> $GITHUB_ENV

      # Шаг 6: Проверка, требует ли код форматирования в изменённых файлах
      - name: Verify .NET code formatting for changed files
        run: |
          if [ -z "${{ env.changed_files }}" ]; then
            echo "No relevant changes found. Exiting the action."
            exit 0  # Если изменений нет, завершаем процесс
          fi
          echo "Verifying .NET code formatting for changed files..."
          dotnet format ${{ env.changed_files }} --verify-no-changes

      # Шаг 7: Если форматирование нужно, применяем его
      - name: Apply .NET code formatting on changed files
        run: |
          echo "Applying .NET code formatting on changed files..."
          dotnet format ${{ env.changed_files }}
